# Generated from C:/Users/victo/Desktop/Projetos/Jauan\jauan.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,11,89,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,
        1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
        1,6,1,6,1,7,4,7,65,8,7,11,7,12,7,66,1,8,4,8,70,8,8,11,8,12,8,71,
        1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,84,8,9,1,10,1,10,1,10,
        1,10,0,0,11,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,
        1,0,5,1,0,48,57,2,0,65,90,97,122,4,0,33,33,42,43,45,45,47,47,2,0,
        60,60,62,62,3,0,9,10,12,13,32,32,95,0,1,1,0,0,0,0,3,1,0,0,0,0,5,
        1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,
        0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,1,23,1,0,0,0,3,30,1,
        0,0,0,5,35,1,0,0,0,7,37,1,0,0,0,9,41,1,0,0,0,11,45,1,0,0,0,13,53,
        1,0,0,0,15,64,1,0,0,0,17,69,1,0,0,0,19,83,1,0,0,0,21,85,1,0,0,0,
        23,24,5,102,0,0,24,25,5,117,0,0,25,26,5,110,0,0,26,27,5,99,0,0,27,
        28,5,97,0,0,28,29,5,111,0,0,29,2,1,0,0,0,30,31,5,109,0,0,31,32,5,
        97,0,0,32,33,5,105,0,0,33,34,5,110,0,0,34,4,1,0,0,0,35,36,5,58,0,
        0,36,6,1,0,0,0,37,38,5,101,0,0,38,39,5,110,0,0,39,40,5,100,0,0,40,
        8,1,0,0,0,41,42,5,118,0,0,42,43,5,97,0,0,43,44,5,114,0,0,44,10,1,
        0,0,0,45,46,5,99,0,0,46,47,5,111,0,0,47,48,5,109,0,0,48,49,5,97,
        0,0,49,50,5,110,0,0,50,51,5,100,0,0,51,52,5,111,0,0,52,12,1,0,0,
        0,53,54,5,99,0,0,54,55,5,111,0,0,55,56,5,110,0,0,56,57,5,115,0,0,
        57,58,5,116,0,0,58,59,1,0,0,0,59,60,3,17,8,0,60,61,5,61,0,0,61,62,
        3,15,7,0,62,14,1,0,0,0,63,65,7,0,0,0,64,63,1,0,0,0,65,66,1,0,0,0,
        66,64,1,0,0,0,66,67,1,0,0,0,67,16,1,0,0,0,68,70,7,1,0,0,69,68,1,
        0,0,0,70,71,1,0,0,0,71,69,1,0,0,0,71,72,1,0,0,0,72,18,1,0,0,0,73,
        84,7,2,0,0,74,75,5,61,0,0,75,84,5,61,0,0,76,77,5,33,0,0,77,84,5,
        61,0,0,78,79,5,62,0,0,79,84,5,61,0,0,80,81,5,60,0,0,81,84,5,61,0,
        0,82,84,7,3,0,0,83,73,1,0,0,0,83,74,1,0,0,0,83,76,1,0,0,0,83,78,
        1,0,0,0,83,80,1,0,0,0,83,82,1,0,0,0,84,20,1,0,0,0,85,86,7,4,0,0,
        86,87,1,0,0,0,87,88,6,10,0,0,88,22,1,0,0,0,4,0,66,71,83,1,6,0,0
    ]

class jauanLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    DECLARACAO = 7
    VALUE = 8
    ID = 9
    OPERADOR = 10
    WS = 11

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'funcao'", "'main'", "':'", "'end'", "'var'", "'comando'" ]

    symbolicNames = [ "<INVALID>",
            "DECLARACAO", "VALUE", "ID", "OPERADOR", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "DECLARACAO", 
                  "VALUE", "ID", "OPERADOR", "WS" ]

    grammarFileName = "jauan.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


